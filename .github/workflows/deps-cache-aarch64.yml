name: deps-cache-aarch64
on: pull_request

env:
  LIBTORCH_VERSION: 2.2.0
  TORCHVISION_VERSION: 0.17.0
  PROTOBUF_VERSION: 3.11.2
  CACHE_DATE: 20240205

jobs:
  linux-aarch64-deps:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: pnnx-patches
      uses: actions/checkout@v4
      with:
        path: pnnx-patches
    - name: cache-libtorch
      id: cache-libtorch
      uses: actions/cache@v4.0.0
      with:
        path: "/tmp/libtorch"
        key: libtorch-${{ env.LIBTORCH_VERSION }}-linux-aarch64-${{ env.CACHE_DATE }}

    - name: setup-qemu
      if: steps.cache-libtorch.outputs.cache-hit != 'true'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    - name: libtorch
      if: steps.cache-libtorch.outputs.cache-hit != 'true'
      uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_ARCHS_LINUX: "aarch64"
        CIBW_BUILD: 'cp310-manylinux_aarch64'
        CIBW_BUILD_VERBOSITY: 1
        CIBW_REPAIR_WHEEL_COMMAND: ""
        CIBW_BEFORE_ALL: yum install protobuf-devel -y &&
          yum install devtoolset-9 -y &&
          yum install wget zip -y &&
          wget -q https://github.com/pytorch/pytorch/releases/download/v${{ env.LIBTORCH_VERSION }}/pytorch-v${{ env.LIBTORCH_VERSION }}.tar.gz &&
          tar -xf pytorch-v${{ env.LIBTORCH_VERSION }}.tar.gz &&
          cd pytorch-v${{ env.LIBTORCH_VERSION }} &&
          pip install -r requirements.txt &&
          patch -p1 -i /project/pnnx-patches/pytorch-v${{ env.LIBTORCH_VERSION }}-fix-mobile-build.patch &&
          patch -p1 -i /project/pnnx-patches/pytorch-v${{ env.LIBTORCH_VERSION }}-no-link-system-lib.patch &&
          patch -p1 -i /project/pnnx-patches/pytorch-v${{ env.LIBTORCH_VERSION }}-fix-pocketfft-build.patch &&
          patch -p1 -i /project/pnnx-patches/pytorch-v${{ env.LIBTORCH_VERSION }}-set-python-executable.patch &&
          mkdir -p build && cd build &&
          cmake -DCMAKE_INSTALL_PREFIX="/host/tmp/libtorch" -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SHARED_LIBS=OFF
              -DBUILD_CAFFE2_OPS=OFF
              -DBUILD_CUSTOM_PROTOBUF=OFF
              -DBUILD_LITE_INTERPRETER=OFF
              -DBUILD_PYTHON=OFF
              -DINTERN_BUILD_MOBILE=ON
              -DINTERN_DISABLE_AUTOGRAD=ON
              -DINTERN_DISABLE_ONNX=ON
              -DUSE_CUDA=OFF
              -DUSE_DISTRIBUTED=OFF
              -DUSE_ITT=OFF
              -DUSE_KINETO=OFF
              -DUSE_LITE_INTERPRETER_PROFILER=OFF
              -DUSE_MKLDNN=OFF
              -DUSE_MPS=OFF
              -DUSE_NUMPY=OFF
              -DUSE_OPENMP=OFF
              -DUSE_SOURCE_DEBUG_ON_MOBILE=OFF
              -DUSE_XNNPACK=OFF
              -DCMAKE_CXX_COMPILER="/opt/rh/devtoolset-9/root/usr/bin/c++"
              -DCMAKE_C_COMPILER="/opt/rh/devtoolset-9/root/usr/bin/cc"
              .. &&
          cmake --build . -j 4 &&
          cmake --build . --target install/strip
      with:
        package-dir: pnnx-patches
        output-dir: wheelhouse1
    - name: cache-torchvision
      id: cache-torchvision
      uses: actions/cache@v4.0.0
      with:
        path: "/tmp/torchvision"
        key: torchvision-${{ env.TORCHVISION_VERSION }}-linux-aarch64-${{ env.CACHE_DATE }}
    - name: torchvision
      if: steps.cache-torchvision.outputs.cache-hit != 'true'
      uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_ARCHS_LINUX: "aarch64"
        CIBW_BUILD: 'cp310-manylinux_aarch64'
        CIBW_BUILD_VERBOSITY: 1
        CIBW_REPAIR_WHEEL_COMMAND: ""
        CIBW_BEFORE_ALL: yum install protobuf-devel -y &&
          yum install devtoolset-9 -y &&
          yum install wget zip -y &&
          wget -q https://github.com/pytorch/vision/archive/refs/tags/v${{ env.TORCHVISION_VERSION }}.zip -O vision-${{ env.TORCHVISION_VERSION }}.zip &&
          unzip -q vision-${{ env.TORCHVISION_VERSION }}.zip &&
          cd vision-${{ env.TORCHVISION_VERSION }} &&
          patch -p1 -i /project/pnnx-patches/vision-${{ env.TORCHVISION_VERSION }}-ops-only.patch  &&
          patch -p1 -i /project/pnnx-patches/vision-${{ env.TORCHVISION_VERSION }}-no-cuda-version.patch  &&
          mkdir -p build && cd build  &&
          cmake -DCMAKE_INSTALL_PREFIX="/host/tmp/torchvision"
          -DTorch_DIR="/host/tmp/libtorch/share/cmake/Torch"
          -DCMAKE_BUILD_TYPE=MinSizeRel -DWITH_PNG=OFF
          -DCMAKE_C_COMPILER="/opt/rh/devtoolset-9/root/usr/bin/cc"
          -DCMAKE_CXX_COMPILER="/opt/rh/devtoolset-9/root/usr/bin/c++" -DWITH_JPEG=OFF ..  &&
          cmake --build . -j 4  &&
          cmake --build . --target install/strip
      with:
        package-dir: pnnx-patches
        output-dir: wheelhouse2
    - name: cache-protobuf
      id: cache-protobuf
      uses: actions/cache@v4.0.0
      with:
        path: "/tmp/protobuf"
        key: protobuf-${{ env.PROTOBUF_VERSION }}-linux-aarch64-${{ env.CACHE_DATE }}
    - name: protobuf
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_ARCHS_LINUX: "aarch64"
        CIBW_BUILD: 'cp310-manylinux_aarch64'
        CIBW_BUILD_VERBOSITY: 1
        CIBW_REPAIR_WHEEL_COMMAND: ""
        CIBW_BEFORE_ALL: yum install protobuf-devel -y &&
          yum install devtoolset-9 -y &&
          yum install wget zip -y &&
          wget -q https://github.com/protocolbuffers/protobuf/archive/v${{ env.PROTOBUF_VERSION }}.zip -O protobuf-${{ env.PROTOBUF_VERSION }}.zip &&
          unzip -q protobuf-${{ env.PROTOBUF_VERSION }}.zip &&
          cd protobuf-${{ env.PROTOBUF_VERSION }} &&
          mkdir -p build2 && cd build2 &&
          cmake -DCMAKE_INSTALL_PREFIX="/host/tmp/protobuf" -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_C_COMPILER="/opt/rh/devtoolset-9/root/usr/bin/cc"
          -DCMAKE_CXX_COMPILER="/opt/rh/devtoolset-9/root/usr/bin/c++" -DCMAKE_BUILD_TYPE=MinSizeRel ../cmake &&
          cmake --build . -j 4 &&
          cmake --build . --target install/strip
      with:
        package-dir: pnnx-patches
        output-dir: wheelhouse3
