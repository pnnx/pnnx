name: coverage
on:
  push:
    tags:
      - '*'

jobs:
  ubuntu:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - torch-version: 1.8.1
            torchvision-version: 0.9.1

          - torch-version: 1.10.0
            torchvision-version: 0.11.1

          - torch-version: 1.13.0
            torchvision-version: 0.14.0

          - torch-version: 2.2.1
            torchvision-version: 0.17.1

    steps:
    - name: setup pytorch-${{ matrix.torch-version }}
      run: |
        pip install torch==${{ matrix.torch-version }}+cpu torchvision==${{ matrix.torchvision-version }}+cpu -f https://download.pytorch.org/whl/torch_stable.html

    - name: cache-torchvision-${{ matrix.torchvision-version }}
      id: cache-torchvision
      uses: actions/cache@v4.1.2
      with:
        path: torchvision-${{ matrix.torchvision-version }}-install
        key: torchvision-${{ matrix.torchvision-version }}-linux-install-20211228
    - name: checkout-torchvision-${{ matrix.torchvision-version }}
      if: steps.cache-torchvision.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: pytorch/vision
        path: vision
        ref: v${{ matrix.torchvision-version }}
    - name: torchvision-${{ matrix.torchvision-version }}
      if: steps.cache-torchvision.outputs.cache-hit != 'true'
      run: |
        cd vision
        mkdir -p build; cd build
        cmake -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/torchvision-${{ matrix.torchvision-version }}-install -DTorch_DIR=$HOME/.local/lib/python3.8/site-packages/torch/share/cmake/Torch -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . -j $(nproc)
        cmake --build . --target install

    - name: lcov
      run: sudo apt-get install lcov

    - name: ncnn
      uses: actions/checkout@v4
      with:
        repository: Tencent/ncnn
        path: ncnn
        submodules: recursive

    - name: build-ncnn
      run: |
        python -m pip install --upgrade pip
        pip install pytest setuptools wheel twine einops
        cd ncnn
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DNCNN_PYTHON=ON -DNCNN_BUILD_TOOLS=OFF -DNCNN_BUILD_EXAMPLES=OFF ..
        cmake --build . -j $(nproc)
        cd ..
        pip install .

    - name: build-pnnx
      run: |
        cd ncnn/tools/pnnx
        mkdir build && cd build
        cmake -DTorch_INSTALL_DIR="$HOME/.local/lib/python3.8/site-packages/torch" -DTorchVision_INSTALL_DIR=$GITHUB_WORKSPACE/torchvision-${{ matrix.torchvision-version }}-install -DCMAKE_BUILD_TYPE=Debug -DPNNX_COVERAGE=ON ..
        cmake --build . -j $(nproc)

    - name: test
      run: |
        export OMP_NUM_THREADS=1
        export MKL_NUM_THREADS=1
        export MKL_ENABLE_INSTRUCTIONS=SSE4_2
        cd ncnn/tools/pnnx
        cd build && ctest --output-on-failure

    - name: lcov-collect
      run: |
        cd ncnn/tools/pnnx
        cd build
        lcov -d ./src -c -o lcov.info
        lcov -r lcov.info '/usr/*' -o lcov.info
        lcov -r lcov.info '*/torch/include/*' -o lcov.info
        lcov --list lcov.info
    - name: codecov
      uses: codecov/codecov-action@v4.6.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ncnn/tools/pnnx/build/lcov.info
